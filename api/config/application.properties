# jdbc
spring.datasource.url=jdbc:postgresql://balarama.db.elephantsql.com:5432/fpeyovmt?sslmode=require
spring.datasource.username=fpeyovmt
spring.datasource.password=BWCV-jbwB9Su8lc9rp17Y55jHzwlKgs5

# oauth
## registration
spring.security.oauth2.client.registration.cognito.client-id=2r833e1qrhc6dka4bvmohc5je8
spring.security.oauth2.client.registration.cognito.clientName=kotlinbaer
spring.security.oauth2.client.registration.cognito.client-secret=l9cpbdaq9udtovatoiqkba642r9kt4ouds3qpt64t95eus2k477
spring.security.oauth2.client.registration.cognito.scope=openid
spring.security.oauth2.client.registration.cognito.provider=cognito
spring.security.oauth2.client.registration.cognito.redirectUriTemplate=http://localhost:8080/login/oauth2/code/cognito  

spring.security.oauth2.client.provider.cognito.issuer-uri=https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_NvRKQYlaB
spring.security.oauth2.client.provider.cognito.redirectUriTemplate=http://localhost:8080/login/oauth2/code/cognito
spring.security.oauth2.client.provider.cognito.usernameAttribute=cognito:username

#
#spring:
#security:
#oauth2:
#client:
#registration:
# cognito-client-1:
#  client-id: 391uhnjlr8v8kicm3cru6g1s8g
#  client-secret: xxxxxxxxxxxxxxxxxxxxxxxxxx
#  client-name: Cognito Code Grant
#  provider: cognito
#  scope: openid
#  redirect-uri-template: http://localhost:8080/login/oauth2/code/cognito
#  authorization-grant-type: authorization_code
#provider:
# cognito:
#  authorization-uri: https://custom-domain.auth.eu-central-1.amazoncognito.com/oauth2/authorize
#  token-uri: https://custom-domain.auth.eu-central-1.amazoncognito.com/oauth2/token
#  user-info-uri: https://custom-domain.auth.eu-central-1.amazoncognito.com/oauth2/userInfo
#  jwk-set-uri: https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_xxxxxxxxx/.well-known/jwks.json
# user-name-attribute: cognito:username
