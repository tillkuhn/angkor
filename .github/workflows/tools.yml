# This is a basic workflow to help you get started with Actions

name: golang-ci

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # https://github.com/actions/cache/blob/main/examples.md#go---modules
      - name: Cache Go modules packages
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build with Go
        working-directory: ./tools
        run: |
          make build

          # all tools are pushed to dockerhub, but we (still) need polly binary for systemd service
          aws s3 cp --no-progress dist/polly ${{ secrets.AWS_DEPLOY_TARGET }}/tools/polly

          # https://stackoverflow.com/questions/39371572/shorthand-syntax-for-message-attributes-in-the-send-message-command-in-aws-cli-f
          # https://docs.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables
          aws sns publish --topic-arn $TOPIC_ARN --message "{\"event\":\"s3push\",\"workflow\":\"$GITHUB_WORKFLOW\"}" \
              --message-attributes "GITHUB_SHA={DataType=String,StringValue=\"$GITHUB_SHA\"}, GITHUB_RUN_ID={DataType=String,StringValue=\"$GITHUB_RUN_ID\"}"
        env:
          CI: true
          TOPIC_ARN: ${{ secrets.TOPIC_ARN }}

      # https://github.com/marketplace/actions/hadolint-action
      - name: Lint Dockerfile with hadolint
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: ./tools/Dockerfile

      # https://docs.github.com/en/actions/language-and-framework-guides/publishing-docker-images
      # https://github.com/docker/build-push-action
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        #working-directory: ./api
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} # Password or personal access token used to log in to a Docker registry. If not set then no login will occur.
          repository: ${{ secrets.DOCKER_USERNAME }}/angkor-tools
          #dockerfile: ./api/Dockerfile
          path: ./tools # path to the build context
          tag_with_ref: true
