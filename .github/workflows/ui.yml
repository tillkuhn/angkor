name: angular-ci

on:
  push:
    branches: [ master ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      # https://github.com/actions/cache
      # This action allows caching dependencies and build outputs to improve workflow execution time.
      # for yarn https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ matrix.node-version }}

      - name: yarn npm install and run build
        working-directory: ./ui
        run: |
          npm install -g yarn
          yarn install
          yarn run test:headless
          yarn run build:prod

      - name: Lint Dockerfile with hadolint
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: ./ui/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} # Password or personal access token used to log in to a Docker registry. If not set then no login will occur.

      - name: Push to DockerHub
        uses: docker/build-push-action@v2 # https://github.com/docker/build-push-action
        with:
          context: ./ui
          file: ./ui/Dockerfile
          platforms: linux/arm64,linux/amd64 #linux/amd64,linux/386
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/angkor-ui:latest
