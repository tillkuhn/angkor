# This is a basic workflow to help you get started with Actions

name: kotlin-ci

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # https://docs.github.com/en/actions/language-and-framework-guides/building-and-testing-java-with-gradle#caching-dependencies
      # todo https://github.com/actions/cache/blob/main/examples.md#java---gradle
      # https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build with Gradle
        # minimum: compileKotlin
        working-directory: ./api
        run: |
          ./gradlew --no-daemon test --fail-fast --stacktrace bootJar
          ls -l build/libs/app.jar
        env:
          CI: true
          # make sure to send SPRING_DATASOURCE_URL, _PASSWORD and _USERNAME as Github Secrets
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_COGNITO_ISSUER_URI: ${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_COGNITO_ISSUER_URI }}

      # https://docs.github.com/en/actions/language-and-framework-guides/publishing-docker-images
      # https://github.com/docker/build-push-action
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        #working-directory: ./api
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} # Password or personal access token used to log in to a Docker registry. If not set then no login will occur.
          repository: ${{ secrets.DOCKER_USERNAME }}/angkor-api
          #dockerfile: ./api/Dockerfile
          path: ./api # path to the build context
          tag_with_ref: true
